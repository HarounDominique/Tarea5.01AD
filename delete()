	@Override
	public boolean delete(Departamento entity) {
		
		boolean flag= false;
		int deptnoToDelete = entity.getDeptno();

		// String xmlDept = toXMLString(entity);//convertimos la entidad por par√°metro
		// de clase documento a xml
		// System.out.println(xmlDept);

		try (Collection col = DatabaseManager.getCollection(
				dataSource.getUrl() + dataSource.getColeccionDepartamentos(), dataSource.getUser(),
				dataSource.getPwd())) {

			XQueryService xqs = (XQueryService) col.getService("XQueryService", "1.0");
			xqs.setProperty("indent", "yes");

			String query = "declare variable $id as xs:int external; " + "/departamentos/DEP_ROW[DEPT_NO = $id]";

			CompiledExpression compiled = xqs.compile(query);
			xqs.declareVariable("id", deptnoToDelete); // Asignar el valor de la variable

			ResourceSet dept = xqs.execute(compiled);

			if (dept.getSize() == 0) {
				// throw new InstanceNotFoundException(id, Departamento.class.getName());
			} else {
				flag = true;
			}
		} catch (XMLDBException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return flag;
	}
